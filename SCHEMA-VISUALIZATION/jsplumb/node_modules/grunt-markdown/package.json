{
  "name": "grunt-markdown",
  "description": "Compile markdown to html. GFM and code highlighting support!",
  "version": "0.3.0",
  "homepage": "https://github.com/treasonx/grunt-markdown",
  "author": {
    "name": "James Morrin",
    "email": "treasonx@gmail.com"
  },
  "contributors": [
    {
      "name": "Thomas Welton",
      "email": "thomaswelton@me.com"
    },
    {
      "name": "Matt Dawson",
      "email": "matthewtdawson@gmail.com"
    }
  ],
  "repository": {
    "type": "git",
    "url": "git://github.com/treasonx/grunt-markdown"
  },
  "bugs": {
    "url": "https://github.com/treasonx/grunt-markdown/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/treasonx/grunt-markdown/blob/master/LICENSE-MIT"
    }
  ],
  "main": "grunt.js",
  "engines": {
    "node": "*"
  },
  "scripts": {
    "test": "grunt nodeunit"
  },
  "devDependencies": {
    "grunt": "~0.4.0",
    "grunt-contrib-jshint": "~0.3.0",
    "grunt-contrib-nodeunit": "~0.1.2",
    "grunt-contrib-watch": "~0.3.1"
  },
  "keywords": [
    "gruntplugin"
  ],
  "dependencies": {
    "highlight.js": "~7.3.0",
    "marked": "~0.2.5",
    "grunt-lib-contrib": "~0.3.0",
    "lodash": "~0.9.1"
  },
  "readme": "# grunt-markdown\n\nThis grunt task takes a set of markdown files and converts them to HTML. It supports [GFM](http://github.github.com/github-flavored-markdown/) with code highlighting. The code highlighting is done using [highlight.js](http://softwaremaniacs.org/soft/highlight/en/).\n\n## Getting Started\nInstall this grunt plugin next to your project's [grunt.js gruntfile](http://gruntjs.com/getting-started) with:\n\n```bash\nnpm install grunt-markdown --save-dev\n```\n\nThen add this line to your gruntfile:\n\n```javascript\ngrunt.loadNpmTasks('grunt-markdown');\n```\n\n## Documentation\nCreating a markdown task is simple. For the basic functionality add the following config in your gruntfile:\n\n```javascript\ngrunt.initConfig({\n  markdown: {\n    all: {\n      files: [\n        {\n          expand: true,\n          src: 'docs/src/*.md',\n          dest: 'docs/html/',\n          ext: '.html'\n        }\n      ]\n    }\n  }\n});\n\n```\n\nHere is an example config using all of the options:\n\n```javascript\ngrunt.initConfig({\n  markdown: {\n    all: {\n      files: [\n        {\n          expand: true,\n          src: 'docs/src/*.md',\n          dest: 'docs/html/',\n          ext: '.html'\n        }\n      ],\n      options: {\n        template: 'myTemplate.jst',\n        markdownOptions: {\n          gfm: true,\n          highlight: manual\n          codeLines: {\n            before: '<span>',\n            after: '</span>'\n          }\n        }\n      }\n    }\n  }\n});\n\n```\nThese are the properties that the `markdown` task accepts:\n\n* `files`: This plugin supports use of the [files API](http://gruntjs.com/configuring-tasks#files) introduced in Grunt 0.4.0. Files may be specified using any one of the [Compact Format](http://gruntjs.com/configuring-tasks#compact-format), [Files Objects Format](http://gruntjs.com/configuring-tasks#files-object-format), or [Files Array Format](http://gruntjs.com/configuring-tasks#files-array-format) (as in the above example).\n* `options`: options to be passed to the markdown parser \n    * `template`: If you wish to specify your own html template, use the `template` option. Include the following line: `<%=content%>` where you want the compiled markdown inserted in your template\n    * `markdownOptions`: Options passed directly to the markdown parser.\n\nMost markdown options are passed as-is to the [marked](https://github.com/chjj/marked) markdown parser. The only option that is processed prior to compiling the markdown is the `highlight` option. If you specify `auto` or `manual` the task will handle highlighting code blocks for you use highlight.js. If you pass a custom function as the highlight option it will be used to highlight the code.\n\n* `auto`: Will try to detect the language\n* `manual`: will pass the language name from markdown to the highlight function\n* `codeLines`: specify text that should wrap code lines\n\n## License\nCopyright (c) 2012 James Morrin\nLicensed under the MIT license.\n",
  "_id": "grunt-markdown@0.3.0",
  "dist": {
    "shasum": "fed172eb0ec06136071d16cfcc8e7c0c9228d4f5"
  },
  "_from": "grunt-markdown"
}
